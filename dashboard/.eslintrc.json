{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2020,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": {
      "typescript": {}
    }
  },
  "extends": [
    "react-app",
    "react-app/jest",
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:jest/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "prettier",
    "plugin:react/recommended",
    "plugin:prettier/recommended"
  ],
  "plugins": ["react", "@typescript-eslint", "jest", "jsx-a11y", "import"],
  "env": {
    "browser": true,
    "es6": true,
    "jest": true
  },
  "rules": {
    "quotes": [
      "error",
      "double",
      {
        "allowTemplateLiterals": true,
        "avoidEscape": true
      }
    ],
    "import/no-anonymous-default-export": [
      "error",
      {
        "allowObject": true,
        "allowArrowFunction": true
      }
    ],
    "@typescript-eslint/ban-types": [
      "error",
      {
        "extendDefaults": true,
        "types": {
          "{}": false, // allow {} as a type as it is safe to be used in React
          "object": false // allow object as a type
        }
      }
    ],
    "@typescript-eslint/explicit-module-boundary-types": "off", // disable warning when missing return type
    "@typescript-eslint/no-empty-function": [
      "error",
      {
        "allow": [
          "arrowFunctions" // allow () => {}
        ]
      }
    ],
    "@typescript-eslint/no-explicit-any": "off", // allow using 'any'
    "@typescript-eslint/no-non-null-assertion": "off", // allow non-null assertions using '!'
    "jest/no-conditional-expect": "off", // allow 'expect' in 'if' and 'try-catch'
    "jest/no-identical-title": "off",
    "jest/no-try-expect": "off",
    "jest/valid-title": "off",
    "jsx-a11y/click-events-have-key-events": "off",
    "jsx-a11y/label-has-associated-control": "off",
    "jsx-a11y/no-onchange": "off", // allow using onChange instead of onBlur, but it is not recommended
    "react/no-unescaped-entities": [
      "error",
      {
        "forbid": [">", "}"] // avoid warnings with single/double quotes
      }
    ],
    "react/jsx-uses-react": "off", // allow removing unused react imports (react >17)
    "react/react-in-jsx-scope": "off", // allow removing unused react imports (react >17)
    "no-use-before-define": "off" // superseed with @typescript-eslint/no-use-before-define
  }
}
