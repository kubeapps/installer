openapi: 3.0.3
servers:
  - url: 'http://127.0.0.1:8080'
    description: Development URL
info:
  description: |
   [![CircleCI](https://circleci.com/gh/kubeapps/kubeapps/tree/master.svg?style=svg)](https://circleci.com/gh/kubeapps/kubeapps/tree/master)
    
    [Kubeapps](https://github.com/kubeapps/kubeapps) is a web-based UI for deploying and managing applications in Kubernetes clusters.
    #### Developer Documentation
    - The [Kubeapps architecture overview](https://github.com/kubeapps/kubeapps/blob/master/docs/architecture/overview.md).
    - The [Kubeapps Developer Documentation](https://github.com/kubeapps/kubeapps/blob/master/docs/developer/README.md) for instructions on setting up the developer environment for developing on Kubeapps and its components.
    - The [Kubeapps Build Guide](https://github.com/kubeapps/kubeapps/blob/master/docs/developer/build.md) for instructions on setting up the build environment and building Kubeapps from source.
  version: 1.0.0
  title: Kubeapps API
  termsOfService: 'https://github.com/kubeapps/kubeapps/blob/master/LICENSE'
  contact:
    email: containers@bitnami.com
    name: Bitnami
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: assetsvc
    externalDocs:
      url: 'https://github.com/kubeapps/kubeapps/tree/master/cmd/assetsvc'
    description: 'The assetsvc component is a micro-service that creates an API endpoint for accessing the metadata for charts in Helm chart repositories that is populated in a Postgresql server.'
  - name: kubeops
    externalDocs:
      url: 'https://github.com/kubeapps/kubeapps/tree/master/cmd/kubeops'
    description: 'The kubeops component is a micro-service that creates an API endpoint for accessing the Helm API and Kubernetes resources.'
  - name: kubernetes
    externalDocs:
      url: 'https://kubernetes.io/docs/concepts/overview/kubernetes-api/'
    description: 'Kubernetes API'
externalDocs:
  description: ''
  url: 'https://github.com/kubeapps/kubeapps'
paths:
  # cmd/assetsvc/main.go
  '/api/assetsvc/v1/clusters/{cluster}/namespaces/{namespace}/charts':
    get:
      tags:
        - assetsvc
      summary: listChartsWithFilters
      description: ''
      operationId: listChartsWithFilters
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Namespace name
        - name: name
          in: query
          required: false
          schema:
            type: string
          description: Chart name
        - name: version
          in: query
          required: false
          schema:
            type: string
          description: Chart version
        - name: appversion
          in: query
          required: false
          schema:
            type: string
          description: Chart app version
        - name: repos
          in: query
          required: false
          schema:
            type: string
          description: Comma separated list of chart repositories
        - name: categories
          in: query
          required: false
          schema:
            type: string
          description: Comma separated list of chart cateogries
        - name: q
          in: query
          required: false
          schema:
            type: string
          description: Text query  to search for specific charts
        - name: page
          in: query
          required: false
          schema:
            type: string
            default: '1'
          description: Number of the page to fetch (used with 'size' parameter)
        - name: size
          in: query
          required: false
          schema:
            type: string
            default: '0'
          description: Number results to fetch (used with 'page' parameter)
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Chart'
                  meta:
                    type: object
                    properties:
                      totalPages:
                        type: integer
        '401':
          description: Unauthorized
  '/api/assetsvc/v1/clusters/{cluster}/namespaces/{namespace}/charts/categories':
    get:
      tags:
        - assetsvc
      summary: getChartCategories
      description: ''
      operationId: getChartCategories
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Namespace name
        - name: name
          in: query
          required: false
          schema:
            type: string
          description: Chart name
        - name: version
          in: query
          required: false
          schema:
            type: string
          description: Chart version
        - name: appversion
          in: query
          required: false
          schema:
            type: string
          description: Chart app version
        - name: repos
          in: query
          required: false
          schema:
            type: string
          description: Comma separated list of chart repositories
        - name: categories
          in: query
          required: false
          schema:
            type: string
          description: Comma separated list of chart cateogries
        - name: q
          in: query
          required: false
          schema:
            type: string
          description: Text query  to search for specific charts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChartCategory'
        '401':
          description: Unauthorized
  '/api/assetsvc/v1/clusters/{cluster}/namespaces/{namespace}/charts/{repo}/categories':
    get:
      tags:
        - assetsvc
      summary: getChartCategories
      description: ''
      operationId: getChartCategories_repo
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Namespace name
        - name: repo
          in: path
          required: true
          schema:
            type: string
            default: bitnami
          description: Repository name
        - name: name
          in: query
          required: false
          schema:
            type: string
          description: Chart name
        - name: version
          in: query
          required: false
          schema:
            type: string
          description: Chart version
        - name: appversion
          in: query
          required: false
          schema:
            type: string
          description: Chart app version
        - name: repos
          in: query
          required: false
          schema:
            type: string
          description: Comma separated list of chart repositories
        - name: categories
          in: query
          required: false
          schema:
            type: string
          description: Comma separated list of chart cateogries
        - name: q
          in: query
          required: false
          schema:
            type: string
          description: Text query  to search for specific charts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChartCategory'
        '401':
          description: Unauthorized
  '/api/assetsvc/v1/clusters/{cluster}/namespaces/{namespace}/charts/{repo}':
    get:
      tags:
        - assetsvc
      summary: listChartsWithFilters
      description: ''
      operationId: listChartsWithFilters_repo
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Namespace name
        - name: repo
          in: path
          required: true
          schema:
            type: string
            default: bitnami
          description: Repository name
        - name: name
          in: query
          required: false
          schema:
            type: string
          description: Chart name
        - name: version
          in: query
          required: false
          schema:
            type: string
          description: Chart version
        - name: appversion
          in: query
          required: false
          schema:
            type: string
          description: Chart app version
        - name: repos
          in: query
          required: false
          schema:
            type: string
          description: Comma separated list of chart repositories
        - name: categories
          in: query
          required: false
          schema:
            type: string
          description: Comma separated list of chart cateogries
        - name: q
          in: query
          required: false
          schema:
            type: string
          description: Text query  to search for specific charts
        - name: page
          in: query
          required: false
          schema:
            type: string
            default: '1'
          description: Number of the page to fetch (used with 'size' parameter)
        - name: size
          in: query
          required: false
          schema:
            type: string
            default: '0'
          description: Number results to fetch (used with 'page' parameter)
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Chart'
                  meta:
                    type: object
                    properties:
                      totalPages:
                        type: integer
        '401':
          description: Unauthorized
  '/api/assetsvc/v1/clusters/{cluster}/namespaces/{namespace}/charts/{repo}/{chartName}':
    get:
      tags:
        - assetsvc
      summary: getChart
      description: ''
      operationId: getChart
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Namespace name
        - name: repo
          in: path
          required: true
          schema:
            type: string
            default: bitnami
          description: Repository name
        - name: chartName
          in: path
          required: true
          schema:
            type: string
          description: Chart name
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Chart'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  '/api/assetsvc/v1/clusters/{cluster}/namespaces/{namespace}/charts/{repo}/{chartName}/versions':
    get:
      tags:
        - assetsvc
      summary: listChartVersions
      description: ''
      operationId: listChartVersions
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Namespace name
        - name: repo
          in: path
          required: true
          schema:
            type: string
            default: bitnami
          description: Repository name
        - name: chartName
          in: path
          required: true
          schema:
            type: string
          description: Chart name
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChartVersion'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  '/api/assetsvc/v1/clusters/{cluster}/namespaces/{namespace}/charts/{repo}/{chartName}/versions/{version}':
    get:
      tags:
        - assetsvc
      summary: getChartVersion
      description: ''
      operationId: getChartVersion
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Namespace name
        - name: repo
          in: path
          required: true
          schema:
            type: string
            default: bitnami
          description: Repository name
        - name: chartName
          in: path
          required: true
          schema:
            type: string
          description: Chart name
        - name: version
          in: path
          required: true
          schema:
            type: string
          description: Chart version
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ChartVersion'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  '/api/assetsvc/v1/clusters/{cluster}/namespaces/{namespace}/assets/{repo}/{chartName}/versions/{version}/README.md':
    get:
      tags:
        - assetsvc
      summary: getChartVersionReadme
      description: ''
      operationId: getChartVersionReadme
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Namespace name
        - name: repo
          in: path
          required: true
          schema:
            type: string
            default: bitnami
          description: Repository name
        - name: chartName
          in: path
          required: true
          schema:
            type: string
          description: Chart name
        - name: version
          in: path
          required: true
          schema:
            type: string
          description: Chart version
      responses:
        '200':
          description: Successful response
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Not found
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Unauthorized
  '/api/assetsvc/v1/clusters/{cluster}/namespaces/{namespace}/assets/{repo}/{chartName}/versions/{version}/values.yaml':
    get:
      tags:
        - assetsvc
      summary: getChartVersionValues
      description: ''
      operationId: getChartVersionValues
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Namespace name
        - name: repo
          in: path
          required: true
          schema:
            type: string
            default: bitnami
          description: Repository name
        - name: chartName
          in: path
          required: true
          schema:
            type: string
          description: Chart name
        - name: version
          in: path
          required: true
          schema:
            type: string
          description: Chart version
      responses:
        '200':
          description: Successful response
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Not found
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Unauthorized
  '/api/assetsvc/v1/clusters/{cluster}/namespaces/{namespace}/assets/{repo}/{chartName}/versions/{version}/values.schema.json':
    get:
      tags:
        - assetsvc
      summary: getChartVersionSchema
      description: ''
      operationId: getChartVersionSchema
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Namespace name
        - name: repo
          in: path
          required: true
          schema:
            type: string
            default: bitnami
          description: Repository name
        - name: chartName
          in: path
          required: true
          schema:
            type: string
          description: Chart name
        - name: version
          in: path
          required: true
          schema:
            type: string
          description: Chart version
      responses:
        '200':
          description: Successful response
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Not found
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Unauthorized
  '/api/assetsvc/v1/clusters/{cluster}/namespaces/{namespace}/charts/{repo}/{chartName}/logo':
    get:
      tags:
        - assetsvc
      summary: getChartIcon
      description: ''
      operationId: getChartIcon
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Namespace name
        - name: repo
          in: path
          required: true
          schema:
            type: string
            default: bitnami
          description: Repository name
        - name: chartName
          in: path
          required: true
          schema:
            type: string
          description: Chart name
      responses:
        '200':
          description: Successful response
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/svg+xml:
              schema:
                type: string
        '404':
          description: Not found
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Unauthorized
  '/api/assetsvc/v1/ns/{namespace}/assets/{repo}/{chartName}/logo':
    get:
      tags:
        - assetsvc
      summary: getChartIcon
      description: ''
      operationId: getChartIcon_noncluster
      parameters:
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Namespace name
        - name: repo
          in: path
          required: true
          schema:
            type: string
            default: bitnami
          description: Repository name
        - name: chartName
          in: path
          required: true
          schema:
            type: string
          description: Chart name
      responses:
        '200':
          description: Successful response
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/svg+xml:
              schema:
                type: string
        '404':
          description: Not found
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Unauthorized
  
  # kubernetes
  '/api/clusters/{cluster}/apis':
    get:
      tags:
        - kubernetes
      summary: Proxied Kubernetes API
      description: 'The whole Kubernetes API is exposed through this endpoint'
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
  '/api/clusters/{cluster}/openapi/v2':
    get:
      tags:
        - kubernetes
      summary: Kubernetes OpenAPI documentation
      description: 'Current documentation for the Kubernetes API'
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
  
  # pkg/http-handler/http-handler.go
  '/api/v1/clusters/{cluster}/can-i':
    post:
      tags:
        - kubeops
      summary: 'CanI'
      description: ''
      operationId: 'CanI'
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceAttributes'
      responses:
        '200':
          description: Successful response
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AllowedResponse'
              
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  '/api/v1/clusters/{cluster}/namespaces':
    get:
      tags:
        - kubeops
      summary: 'GetNamespaces'
      description: ''
      operationId: 'GetNamespaces'
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
      responses:
        '200':
          description: Successful response
          content:
            text/plain:
              schema:
                type: object
                properties:
                  namespaces:
                    type: array
                    items:
                      $ref: '#/components/schemas/Namespace'
        '401':
          description: Unauthorized
  '/api/v1/clusters/{cluster}/apprepositories':
    get:
      tags:
        - kubeops
      summary: 'ListAppRepositories'
      description: ''
      operationId: 'ListAppRepositories_ns'
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
      responses:
        '200':
          description: Successful response
          content:
            text/plain:
              schema:
                type: object
                # properties:
                #   namespaces:
                #     type: array
                #     items:
                #       $ref: '#/components/schemas/AppRepository'
        '401':
          description: Unauthorized
  '/api/v1/clusters/{cluster}/namespaces/{namespace}/apprepositories':
    get:
      tags:
        - kubeops
      summary: 'ListAppRepositories'
      description: ''
      operationId: 'ListAppRepositories_'
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Namespace name
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
        - kubeops
      summary: 'CreateAppRepository'
      description: ''
      operationId: 'CreateAppRepository'
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Namespace name
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  '/api/v1/clusters/{cluster}/namespaces/{namespace}/apprepositories/validate':
    post:
      tags:
        - kubeops
      summary: 'ValidateAppRepository'
      description: ''
      operationId: 'ValidateAppRepository'
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Namespace name
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  '/api/v1/clusters/{cluster}/namespaces/{namespace}/apprepositories/{name}':
    put:
      tags:
        - kubeops
      summary: 'UpdateAppRepository'
      description: ''
      operationId: 'UpdateAppRepository'
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Namespace name
        - name: name
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Apprepository name
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
    delete:
      tags:
        - kubeops
      summary: 'DeleteAppRepository'
      description: ''
      operationId: 'DeleteAppRepository'
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Namespace name
        - name: name
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Apprepository name
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  '/api/v1/clusters/{cluster}/namespaces/{namespace}/apprepositories/{name}/refresh':
    post:
      tags:
        - kubeops
      summary: 'RefreshAppRepository'
      description: ''
      operationId: 'RefreshAppRepository'
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Namespace name
        - name: name
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Apprepository name
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
  '/api/v1/clusters/{cluster}/namespaces/{namespace}/operator/{name}/logo':
    get:
      tags:
        - kubeops
      summary: 'GetOperatorLogo'
      description: ''
      operationId: 'GetOperatorLogo'
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Namespace name
        - name: name
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Apprepository name
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string


  # cmd/kubeops/main.go (cluster aware)
  '/api/tiller-deploy/v1/clusters/{cluster}/releases':
    get:
      tags:
        - kubeops
      summary: 'ListAllReleases'
      description: ''
      operationId: 'ListAllReleases'
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AppOverview'
        '401':
          description: Unauthorized
  '/api/tiller-deploy/v1/clusters/{cluster}/namespaces/{namespace}/releases':
    get:
      tags:
        - kubeops
      summary: 'ListReleases'
      description: ''
      operationId: 'ListReleases'
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Namespace name
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AppOverview'
        '401':
          description: Unauthorized
    post:
      tags:
        - kubeops
      summary: 'CreateRelease'
      description: ''
      operationId: 'CreateRelease'
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Namespace name
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Release'
        '401':
          description: Unauthorized
  '/api/tiller-deploy/v1/clusters/{cluster}/namespaces/{namespace}/releases/{releaseName}':
    get:
      tags:
        - kubeops
      summary: 'GetRelease'
      description: ''
      operationId: 'GetRelease'
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Namespace name
        - name: releaseName
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Release name
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Release'
        '401':
          description: Unauthorized
    delete:
      tags:
        - kubeops
      summary: 'DeleteRelease'
      description: ''
      operationId: 'DeleteRelease'
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Namespace name
        - name: releaseName
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Release name
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Unauthorized
    put:
      tags:
        - kubeops
      summary: 'OperateRelease'
      description: ''
      operationId: 'OperateRelease'
      parameters:
        - name: cluster
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Cluster name
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Namespace name
        - name: releaseName
          in: path
          required: true
          schema:
            type: string
            default: default
          description: Release name
        - name: action
          in: query
          schema:
            type: string
            enum: ["upgrade","rollback"]
            default: upgrade
          description: Action to perform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Release'
        '401':
          description: Unauthorized
  
components:
  schemas:
    # pkg/proxy/proxy.go
    AppOverview:
      type: object
      properties:
        nareleaseNameme:
          type: string
        version:
          type: string
        namespace:
          type: string
        icon:
          type: string
        status:
          type: string
        chart:
          type: string
        chartMetadata:
          $ref: '#/components/schemas/ChartMetadata'
    # /pkg/mod/k8s.io/helm@v2.16.0+incompatible/pkg/proto/hapi/chart/metadata.pb.go
    ChartMetadata:
      type: object
      properties:
        annotations:
          type: string
        apiVersion:
          type: string
        appVersion:
          type: string
        condition:
          type: string
        deprecated:
          type: boolean
        description:
          type: string
        engine:
          type: string
        home:
          type: string
        icon:
          type: array
          items: 
            type: string
        kubeVersion:
          type: string
        maintainers:
          type: array
          items: 
            type: object
            properties:
              name:
                type: string
              email:
                type: string
              url:
                type: string
        name:
          type: string
        sources:
          type: array
          items: 
            type: string
        tags:
          type: string
        version:
          type: string
    # /pkg/mod/helm.sh/helm/v3@v3.5.0/pkg/release/release.go
    Release:
      type: object
      properties:
        name:
          type: string
        info:
          type: string
        chart:
          type: object
        config:
          type: object
        manifest:
          type: string
        hooks:
          type: array
          items:
            type: object
        version:
          type: integer
        namespace:
          type: string
    # pkg/chart/models/chart.go
    ChartCategory:
      type: object
      properties:
        name:
          type: string
        count:
          type: integer
    # pkg/chart/models/chart.go
    Chart:
      type: object
      properties:
        ID:
          type: integer
        name:
          type: string
        repo:
          $ref: '#/components/schemas/Repo'
        description:
          type: string
        home:
          type: string
        keywords:
          type: array
          items:
            type: string
        maintainers:
          type: array
          items:
            type: object
        sources:
          type: array
          items:
            type: string
        icon:
          type: string
        raw_icon:
          type: string
          format: byte
        icon_content_type:
          type: string
        category:
          type: string
        chartVersions:
          type: object
          items:
            type: string
    # pkg/chart/models/chart.go
    ChartVersion:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        attibutes:
          type: object
          properties:
            version:
              type: string
            app_version:
              type: string
            created:
              type: string
              format: time
            digest:
              type: string
            urls:
              type: array
              items:
                type: string
            readme:
              type: string
            values:
              type: string
            schema:
              type: string
        links:
          type: object
        relationships:
          type: object
          properties:
            data:
              type: object
            links:
              type: object
              properties:
                self:
                  type: string
    # /pkg/chart/models/chart.go
    Repo:
      type: object
      properties:
        namespace:
          type: string
        name:
          type: string
        url:
          type: string
        type:
          type: string
    # /pkg/mod/k8s.io/api@v0.20.1/authorization/v1/types.go
    ResourceAttributes:
      type: object
      properties:
        namespace:
          type: string
        verb:
          type: string
        group:
          type: string
        version:
          type: string
        resource:
          type: string
        subresource:
          type: string
        name:
          type: string
    # pkg/mod/k8s.io/api@v0.20.1/core/v1/types.go
    Namespace: 
      type: object
      properties:
        metadata:
          type: object
        spec:
          type: object
        status:
          type: object
    # /pkg/http-handler/http-handler.go
    AllowedResponse:
      type: object
      properties:
        allowed:
          type: string
    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
