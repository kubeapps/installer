language: go
go:
- 1.9

env:
  global:
  - VERSION=${TRAVIS_TAG:-build-$TRAVIS_BUILD_ID}
  - CGO_ENABLED=0

install:
- |
  if ! which kubecfg; then
    wget -O kubecfg https://github.com/ksonnet/kubecfg/releases/download/v0.7.2/kubecfg-$(go env GOOS)-$(go env GOARCH)
    install -m 755 kubecfg $GOPATH/bin/kubecfg
  fi

jobs:
  include:
  - stage: test
    env: PROJECT=go
    script: make test
  - stage:
    env: PROJECT=dashboard
    language: node_js
    node_js:
    - "8"
    install: yarn --cwd=dashboard
    script:
    - yarn --cwd=dashboard run lint
    - yarn --cwd=dashboard run test

  # parallel build stages
  - &cliBuild
    stage: build
    env: BINARY=kubeapps-linux-amd64
    script: make
    deploy:
    - provider: releases
      api_key:
        secure: "G0BmT6tXyXkXlgo9pa4/SNWYZHfwKqxWJ9hVz0LybYnon0IbEjpo5mppsltezEHEQvgdX6H+tujcmOIDAHK2hh3KdeYzZ7GjM1oGRau4x2sN42o6bw7wQ7lC9+ZgPvH9vWiBxf3bZ0TYVjmZ2OcvzBSycg2T5XFKEQKGyJc1cGABFm6At8WXimbaXhWLsrQ0MP9yd5uwvp9PBG+SxJmInDdUIw7sFtEYDL4YDIG6JVgJOV1+3f8oTNiM1wwTPJuaHoybbyeE8xdT9pN6DOk0HZXP+/f6rjx63lMoKCqsqMi6Bz6rDpmI5YfSRh7M2RVebaKnHxYhVKQ20+y0+0UznFmArVSSH4SbFCwz9fYn3NBPLMaSdR91HS4BZe1AeOdXZlfowGOdQuZf3oY/aLtB6cu2jwiUh58CtoTFbg53iZcYwiW69Ap6G40SD2JZNlHPScB5eFJkj1f+3CFHAmB89nLgpZw+S12/HZGQa/OmdB4wd73mqe2XQa7ez60UOjhURwU2LzI02/0NaSswcpu9ygCAYgz1Cy6jAJnmxdvIdcACzYDpgNKNj+yC8GSvAqxEDX+wi6WdUVhy+jwaCzhRgbBZScP8kcFFOKjmdLdeeujRpw3qUzqEh4HW8oNvlg6yXHpoNwjgQJlDIbCHsevPIs/duBCMPy+3st+KaLLwZig="
      file: $BINARY
      skip_cleanup: true
      overwrite: true
      on:
        tags: true
        branch: master
        repo: kubeapps/kubeapps
  - <<: *cliBuild
    env: BINARY=kubeapps-darwin-amd64
    script: GOOS=darwin GOARCH=amd64 make
  - <<: *cliBuild
    env: BINARY=kubeapps-windows-amd64.exe
    script: GOOS=windows GOARCH=amd64 make
  
  # Image builds
  - &imageBuild
    stage: build
    env: IMAGE=kubeapps/chart-repo
    install: skip
    script: make VERSION="$VERSION" $IMAGE
    after_success:
    - |
      if [[ "$TRAVIS_PULL_REQUEST" == "false" ]]; then
        docker login -u="${DOCKER_USERNAME}" -p="${DOCKER_PASSWORD}"
        if [[ -n "$TRAVIS_TAG" ]]; then
          docker push $IMAGE:$VERSION
        fi
        if [[ "$TRAVIS_BRANCH" == "master"  ]]; then
          docker tag $IMAGE:$VERSION $IMAGE:latest
          docker push $IMAGE:latest
        fi
      fi
  - <<: *imageBuild
    env: IMAGE=kubeapps/chartsvc
  - <<: *imageBuild
    env: IMAGE=kubeapps/apprepository-controller
  - <<: *imageBuild
    install: yarn --cwd=dashboard
    env: IMAGE=kubeapps/dashboard
