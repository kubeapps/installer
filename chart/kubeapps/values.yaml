# Default values for kubeapps.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
apprepository:
  image:
    registry: docker.io
    repository: kubeapps/apprepository-controller
    tag: latest
  # Image used to perform chart repository syncs
  syncImage:
    registry: docker.io
    repository: kubeapps/chart-repo
    tag: latest
  # This image is used in a Helm post-install hook to bootstrap the initialRepos below
  jobsImage:
    registry: docker.io
    repository: lachlanevenson/k8s-kubectl
    tag: v1.9.9
  initialRepos:
  - name: stable
    url: https://kubernetes-charts.storage.googleapis.com
  - name: incubator
    url: https://kubernetes-charts-incubator.storage.googleapis.com
  - name: svc-cat
    url: https://svc-catalog-charts.storage.googleapis.com
  - name: bitnami
    url: https://charts.bitnami.com/bitnami
  resources: {}
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  
chartsvc:
  image:
    registry: docker.io
    repository: kubeapps/chartsvc
    tag: latest
  service:
    port: 8080
  resources: {}
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

dashboard:
  image:
    registry: docker.io
    repository: kubeapps/dashboard
    tag: latest
  service:
    port: 8080
  livenessProbe:
    httpGet:
      path: /
      port: 8080
    initialDelaySeconds: 60
    timeoutSeconds: 5
  readinessProbe:
    httpGet:
      path: /
      port: 8080
    initialDelaySeconds: 0
    timeoutSeconds: 5
  resources: {}
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

frontend:
  image:
    registry: docker.io
    repository: bitnami/nginx
    tag: 1.14.0-r27
  service:
    port: 80
    type: ClusterIP
  livenessProbe:
    httpGet:
      path: /healthz
      port: 8080
    initialDelaySeconds: 60
    timeoutSeconds: 5
  readinessProbe:
    httpGet:
      path: /
      port: 8080
    initialDelaySeconds: 0
    timeoutSeconds: 5
  resources: {}
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

tillerProxy:
  image:
    registry: docker.io
    repository: kubeapps/tiller-proxy
    tag: latest
  service:
    port: 8080
  host: tiller-deploy.kube-system:44134
  tls: {}
    # ca:
    # cert:
    # key:
    # verify: false
  resources: {}
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

ingress:
  enabled: false
  # annotations: {}
  path: /
  hosts:
  - kubeapps.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

mongodb:
  # Kubeapps uses MongoDB as a cache and persistence is not required
  persistence:
    enabled: false

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# For RBAC support:
rbac:
  # Perform creation of RBAC resources
  create: true
